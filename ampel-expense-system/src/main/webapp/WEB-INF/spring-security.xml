<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<!-- enable use-expressions -->
	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/admin**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/defaultUrl**" access="hasRole('ROLE_USER')" />
		<!-- access denied page -->
		<access-denied-handler error-page="/403" />
		<form-login login-page="/login" authentication-failure-url="/login?error"
			authentication-success-handler-ref="customAuthenticationSuccessHandler"
			username-parameter="username" password-parameter="password" />
		<logout invalidate-session="true" delete-cookies="true"
			success-handler-ref="customLogoutSuccessHandler" />
		<!-- enable csrf protection logout-success-url="/login?logout" -->
		<csrf />
	</http>
	<beans:bean id="customAuthenticationSuccessHandler"
		class="org.aemple.expense.web.custom.CustomAuthenticationSuccessHandler" />
	<beans:bean id="customLogoutSuccessHandler"
		class="org.aemple.expense.web.custom.CustomLogoutSuccessHandler" />

	
	
	<!-- Select users and user_roles from database -->
	<authentication-manager>
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select username,password, enabled from users where username=?"
				authorities-by-username-query="select username, role from user_roles where username =?  " />
		</authentication-provider>
	</authentication-manager>
</beans:beans>