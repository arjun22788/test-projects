<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-4.0.xsd">

	<!-- enable use-expressions -->
	<!-- enable csrf protection logout-success-url="/login?logout" -->
	
	  <http auto-config="true" use-expressions="true">
	 	<intercept-url pattern="/" access="permitAll"/>
	 	<intercept-url pattern="/login/**" access="permitAll"/>
	 	<intercept-url pattern="/**" access="isAuthenticated()" />
		<intercept-url pattern="/admin/**"  access="hasRole('ADMIN')" />
		<intercept-url pattern="/defaultUrl/**" access="hasRole('USER')" />
		<access-denied-handler error-page="/403" />
		<form-login login-page="/login"  login-processing-url="/j_spring_security_check" authentication-failure-url="/login?error"
			authentication-success-handler-ref="customAuthenticationSuccessHandler"
			username-parameter="username" password-parameter="password" />
		<logout invalidate-session="true" delete-cookies="true" logout-url="/j_spring_security_logout"
		 success-handler-ref="customLogoutSuccessHandler" />
		<csrf disabled="true" />
	</http>  
	
	<beans:bean id="customAuthenticationSuccessHandler" class="org.aemple.expense.web.custom.CustomAuthenticationSuccessHandler" />
	<beans:bean id="customLogoutSuccessHandler" class="org.aemple.expense.web.custom.CustomLogoutSuccessHandler" />

	<!-- Select users and user_roles from database -->
	<authentication-manager alias="authenticationManager">
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select u.user_name as username,u.password as password,u.is_enabled as enabled from users u where u.user_name=?"
				authorities-by-username-query="select u.user_name as username, ur.role_name as role from users u INNER JOIN user_roles ur ON ur.id=u.role_id  where u.user_name=?" />
		</authentication-provider>
	</authentication-manager>
</beans:beans>